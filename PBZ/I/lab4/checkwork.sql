-- 1. Демонстрация процедуры InsertNewProduct для добавления нового товара
EXEC InsertNewProduct
    @NumТовара = 4,
    @Наименование = 'Мышь',
    @Единица_Измерения = 'шт.',
    @Цена = 1200.00;
GO

-- Проверка вставки нового товара
SELECT * FROM Товары;
GO

-- 2. Использование функции GetProductPrice для получения цены товара по номеру
SELECT dbo.GetProductPrice(4) AS Цена_Товара_Мышь;
GO

-- 3. Демонстрация работы триггера PriceCheck: Попытка вставить товар с ценой выше 100000 (триггер должен откатить транзакцию)
BEGIN TRY
    EXEC InsertNewProduct
        @NumТовара = 5,
        @Наименование = 'Телевизор',
        @Единица_Измерения = 'шт.',
        @Цена = 150000.00; -- Эта цена вызовет триггер
END TRY
BEGIN CATCH
    PRINT 'Ошибка: ' + ERROR_MESSAGE(); -- Триггер должен вызвать ошибку
END CATCH;
GO

-- Проверка, что товар с высокой ценой не был вставлен
SELECT * FROM Товары;
GO

-- 4. Демонстрация процедуры InsertInvoice для добавления новой накладной
EXEC InsertInvoice
    @NumНакладной = 104,
    @NumТовара = 4,  -- Накладная на недавно добавленную мышь
    @Количество = 15,
    @Стоимость = 18000.00;
GO

-- Проверка вставки новой накладной
SELECT * FROM Накладные;
GO

-- 5. Использование функции GetInvoiceTotal для получения общей стоимости накладной
SELECT dbo.GetInvoiceTotal(104) AS Общая_Стоимость_Накладной_104;
GO

-- 6. Демонстрация работы триггера QuantityCheck: Попытка обновить накладную с количеством меньше 1 (триггер должен откатить транзакцию)
BEGIN TRY
    UPDATE Накладные
    SET Количество = 0 -- Это вызовет триггер
    WHERE [NumНакладной] = 104;
END TRY
BEGIN CATCH
    PRINT 'Ошибка: ' + ERROR_MESSAGE(); -- Триггер должен вызвать ошибку
END CATCH;
GO

-- Проверка, что количество не было обновлено до 0
SELECT * FROM Накладные WHERE [NumНакладной] = 104;
GO

-- 7. Демонстрация процедуры UpdateAvgScore для обновления среднего балла в таблице Информация_О_Накладных
EXEC UpdateAvgScore
    @NumНакладной = 101,
    @Средний_Балл = 4.9; -- Обновляем средний балл для накладной 101
GO

-- Проверка обновления среднего балла
SELECT * FROM Информация_О_Накладных;
GO

-- 8. Использование функции GetResponsiblePerson для получения ответственного лица по номеру накладной
SELECT dbo.GetResponsiblePerson(101) AS Ответственное_Лицо;
GO

-- 9. Демонстрация работы триггера LogAvgScoreChange: Обновление среднего балла для активации триггера
EXEC UpdateAvgScore
    @NumНакладной = 101,
    @Средний_Балл = 5.0; -- Обновляем средний балл еще раз, чтобы активировать триггер
GO

-- Проверка логирования изменения среднего балла (результат будет выведен с помощью PRINT внутри триггера)
